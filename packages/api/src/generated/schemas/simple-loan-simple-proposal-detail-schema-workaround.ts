import type { AssetDetailSchemaWorkaround } from "./asset-detail-schema-workaround";
import type { ChainIdEnum } from "./chain-id-enum";
import type { CreditDataSchemaWorkaround } from "./credit-data-schema-workaround";
import type { SimpleLoanSimpleProposalDetailSchemaWorkaroundAllowedAcceptor } from "./simple-loan-simple-proposal-detail-schema-workaround-allowed-acceptor";
import type { SimpleLoanSimpleProposalDetailSchemaWorkaroundCollateralStateFingerprint } from "./simple-loan-simple-proposal-detail-schema-workaround-collateral-state-fingerprint";
import type { SimpleLoanSimpleProposalDetailSchemaWorkaroundCreatedFromProposalId } from "./simple-loan-simple-proposal-detail-schema-workaround-created-from-proposal-id";
/**
 * Generated by orval v7.8.0 üç∫
 * Do not edit manually.
 * OpenAPI spec version: 0.0.0
 */
import type { SimpleLoanSimpleProposalDetailSchemaWorkaroundDuration } from "./simple-loan-simple-proposal-detail-schema-workaround-duration";
import type { SimpleLoanSimpleProposalDetailSchemaWorkaroundExpiration } from "./simple-loan-simple-proposal-detail-schema-workaround-expiration";
import type { SimpleLoanSimpleProposalDetailSchemaWorkaroundHash } from "./simple-loan-simple-proposal-detail-schema-workaround-hash";
import type { SimpleLoanSimpleProposalDetailSchemaWorkaroundLoanDefaultDate } from "./simple-loan-simple-proposal-detail-schema-workaround-loan-default-date";
import type { SimpleLoanSimpleProposalDetailSchemaWorkaroundMinCollateralAmount } from "./simple-loan-simple-proposal-detail-schema-workaround-min-collateral-amount";
import type { SimpleLoanSimpleProposalDetailSchemaWorkaroundMinCreditAmount } from "./simple-loan-simple-proposal-detail-schema-workaround-min-credit-amount";
import type { SimpleLoanSimpleProposalDetailSchemaWorkaroundMultiproposalMerkleRoot } from "./simple-loan-simple-proposal-detail-schema-workaround-multiproposal-merkle-root";
import type { SimpleLoanSimpleProposalDetailSchemaWorkaroundNonce } from "./simple-loan-simple-proposal-detail-schema-workaround-nonce";
import type { SimpleLoanSimpleProposalDetailSchemaWorkaroundNonceSpace } from "./simple-loan-simple-proposal-detail-schema-workaround-nonce-space";
import type { SimpleLoanSimpleProposalDetailSchemaWorkaroundProposalContractAddress } from "./simple-loan-simple-proposal-detail-schema-workaround-proposal-contract-address";
import type { SimpleLoanSimpleProposalDetailSchemaWorkaroundProposalId } from "./simple-loan-simple-proposal-detail-schema-workaround-proposal-id";
import type { SimpleLoanSimpleProposalDetailSchemaWorkaroundProposalSpecificData } from "./simple-loan-simple-proposal-detail-schema-workaround-proposal-specific-data";
import type { SimpleLoanSimpleProposalDetailSchemaWorkaroundProposerSpecHash } from "./simple-loan-simple-proposal-detail-schema-workaround-proposer-spec-hash";
import type { SimpleLoanSimpleProposalDetailSchemaWorkaroundReferrer } from "./simple-loan-simple-proposal-detail-schema-workaround-referrer";
import type { SimpleLoanSimpleProposalDetailSchemaWorkaroundRefinancingLoanId } from "./simple-loan-simple-proposal-detail-schema-workaround-refinancing-loan-id";
import type { SimpleLoanSimpleProposalDetailSchemaWorkaroundRelatedThesisId } from "./simple-loan-simple-proposal-detail-schema-workaround-related-thesis-id";
import type { SimpleLoanSimpleProposalDetailSchemaWorkaroundRevokedAt } from "./simple-loan-simple-proposal-detail-schema-workaround-revoked-at";
import type { SimpleLoanSimpleProposalDetailSchemaWorkaroundSignature } from "./simple-loan-simple-proposal-detail-schema-workaround-signature";
import type { SimpleLoanSimpleProposalDetailSchemaWorkaroundSourceOfFunds } from "./simple-loan-simple-proposal-detail-schema-workaround-source-of-funds";
import type { SimpleLoanSimpleProposalDetailSchemaWorkaroundStatus } from "./simple-loan-simple-proposal-detail-schema-workaround-status";
import type { SimpleLoanSimpleProposalDetailSchemaWorkaroundType } from "./simple-loan-simple-proposal-detail-schema-workaround-type";

export interface SimpleLoanSimpleProposalDetailSchemaWorkaround {
	id: string;
	duration: SimpleLoanSimpleProposalDetailSchemaWorkaroundDuration;
	loanDefaultDate?: SimpleLoanSimpleProposalDetailSchemaWorkaroundLoanDefaultDate;
	expiration?: SimpleLoanSimpleProposalDetailSchemaWorkaroundExpiration;
	status: (typeof SimpleLoanSimpleProposalDetailSchemaWorkaroundStatus)[keyof typeof SimpleLoanSimpleProposalDetailSchemaWorkaroundStatus];
	collateral: AssetDetailSchemaWorkaround;
	collateralAmount: string;
	minCollateralAmount?: SimpleLoanSimpleProposalDetailSchemaWorkaroundMinCollateralAmount;
	minCreditAmount?: SimpleLoanSimpleProposalDetailSchemaWorkaroundMinCreditAmount;
	creditData: CreditDataSchemaWorkaround;
	creditAsset: AssetDetailSchemaWorkaround;
	chainId: ChainIdEnum;
	proposalContractAddress?: SimpleLoanSimpleProposalDetailSchemaWorkaroundProposalContractAddress;
	proposalId?: SimpleLoanSimpleProposalDetailSchemaWorkaroundProposalId;
	loanContract: string;
	proposer: string;
	isOffer: boolean;
	type: SimpleLoanSimpleProposalDetailSchemaWorkaroundType;
	sourceOfFunds?: SimpleLoanSimpleProposalDetailSchemaWorkaroundSourceOfFunds;
	relatedThesisId?: SimpleLoanSimpleProposalDetailSchemaWorkaroundRelatedThesisId;
	createdFromProposalId?: SimpleLoanSimpleProposalDetailSchemaWorkaroundCreatedFromProposalId;
	proposalSpecificData?: SimpleLoanSimpleProposalDetailSchemaWorkaroundProposalSpecificData;
	checkCollateralStateFingerprint: boolean;
	collateralStateFingerprint: SimpleLoanSimpleProposalDetailSchemaWorkaroundCollateralStateFingerprint;
	availableCreditLimit: string;
	allowedAcceptor: SimpleLoanSimpleProposalDetailSchemaWorkaroundAllowedAcceptor;
	refinancingLoanId: SimpleLoanSimpleProposalDetailSchemaWorkaroundRefinancingLoanId;
	nonceSpace: SimpleLoanSimpleProposalDetailSchemaWorkaroundNonceSpace;
	nonce: SimpleLoanSimpleProposalDetailSchemaWorkaroundNonce;
	proposerSpecHash: SimpleLoanSimpleProposalDetailSchemaWorkaroundProposerSpecHash;
	signature: SimpleLoanSimpleProposalDetailSchemaWorkaroundSignature;
	multiproposalMerkleRoot: SimpleLoanSimpleProposalDetailSchemaWorkaroundMultiproposalMerkleRoot;
	isOnChain: boolean;
	hash: SimpleLoanSimpleProposalDetailSchemaWorkaroundHash;
	createdAt: number;
	revokedAt: SimpleLoanSimpleProposalDetailSchemaWorkaroundRevokedAt;
	referrer: SimpleLoanSimpleProposalDetailSchemaWorkaroundReferrer;
}
