import type { NotificationActionEnum } from "./notification-action-enum";
import type { NotificationRequestBodyCta } from "./notification-request-body-cta";
import type { NotificationRequestBodyText } from "./notification-request-body-text";
/**
 * Generated by orval v7.7.0 üç∫
 * Do not edit manually.
 * OpenAPI spec version: 0.0.0
 */
import type { NotificationRequestChainId } from "./notification-request-chain-id";
import type { NotificationRequestContractAddress } from "./notification-request-contract-address";
import type { NotificationRequestFirstImage } from "./notification-request-first-image";
import type { NotificationRequestSecondImage } from "./notification-request-second-image";
import type { NotificationRequestToDiscord } from "./notification-request-to-discord";
import type { NotificationRequestToPush } from "./notification-request-to-push";
import type { NotificationRequestTransactionHash } from "./notification-request-transaction-hash";
import type { NotificationTypeEnum } from "./notification-type-enum";

export interface NotificationRequest {
	/** @minLength 1 */
	chain_id: NotificationRequestChainId;
	/** @minLength 1 */
	contract_address: NotificationRequestContractAddress;
	/**
	 * @minLength 1
	 * @maxLength 66
	 */
	recipient_address: string;
	type: NotificationTypeEnum;
	action: NotificationActionEnum;
	has_seen?: boolean;
	/** @minLength 1 */
	first_image: NotificationRequestFirstImage;
	/** @minLength 1 */
	second_image: NotificationRequestSecondImage;
	/** @minLength 1 */
	transaction_hash: NotificationRequestTransactionHash;
	created_at?: string;
	/** @minLength 1 */
	to_discord?: NotificationRequestToDiscord;
	/** @minLength 1 */
	to_push?: NotificationRequestToPush;
	/** @minLength 1 */
	body_text: NotificationRequestBodyText;
	/** @minLength 1 */
	body_cta: NotificationRequestBodyCta;
}
