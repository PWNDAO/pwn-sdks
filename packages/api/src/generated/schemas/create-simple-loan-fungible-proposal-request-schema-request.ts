import type { AssetCategory } from "./asset-category";
import type { ChainIdEnum } from "./chain-id-enum";
/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * OpenAPI spec version: 0.0.0
 */
import type { CreateSimpleLoanFungibleProposalRequestSchemaRequestAvailableCreditLimit } from "./create-simple-loan-fungible-proposal-request-schema-request-available-credit-limit";
import type { CreateSimpleLoanFungibleProposalRequestSchemaRequestCollateralId } from "./create-simple-loan-fungible-proposal-request-schema-request-collateral-id";
import type { CreateSimpleLoanFungibleProposalRequestSchemaRequestCreditPerCollateralUnit } from "./create-simple-loan-fungible-proposal-request-schema-request-credit-per-collateral-unit";
import type { CreateSimpleLoanFungibleProposalRequestSchemaRequestFixedInterestAmount } from "./create-simple-loan-fungible-proposal-request-schema-request-fixed-interest-amount";
import type { CreateSimpleLoanFungibleProposalRequestSchemaRequestHash } from "./create-simple-loan-fungible-proposal-request-schema-request-hash";
import type { CreateSimpleLoanFungibleProposalRequestSchemaRequestMinCollateralAmount } from "./create-simple-loan-fungible-proposal-request-schema-request-min-collateral-amount";
import type { CreateSimpleLoanFungibleProposalRequestSchemaRequestMultiproposalMerkleRoot } from "./create-simple-loan-fungible-proposal-request-schema-request-multiproposal-merkle-root";
import type { CreateSimpleLoanFungibleProposalRequestSchemaRequestNonce } from "./create-simple-loan-fungible-proposal-request-schema-request-nonce";
import type { CreateSimpleLoanFungibleProposalRequestSchemaRequestNonceSpace } from "./create-simple-loan-fungible-proposal-request-schema-request-nonce-space";
import type { CreateSimpleLoanFungibleProposalRequestSchemaRequestReferrer } from "./create-simple-loan-fungible-proposal-request-schema-request-referrer";
import type { CreateSimpleLoanFungibleProposalRequestSchemaRequestRefinancingLoanId } from "./create-simple-loan-fungible-proposal-request-schema-request-refinancing-loan-id";
import type { CreateSimpleLoanFungibleProposalRequestSchemaRequestRelatedThesisId } from "./create-simple-loan-fungible-proposal-request-schema-request-related-thesis-id";
import type { CreateSimpleLoanFungibleProposalRequestSchemaRequestSourceOfFunds } from "./create-simple-loan-fungible-proposal-request-schema-request-source-of-funds";
import type { CreateSimpleLoanFungibleProposalRequestSchemaRequestType } from "./create-simple-loan-fungible-proposal-request-schema-request-type";
import type { CreateSimpleLoanFungibleProposalRequestSchemaRequestUtilizedCreditId } from "./create-simple-loan-fungible-proposal-request-schema-request-utilized-credit-id";

export interface CreateSimpleLoanFungibleProposalRequestSchemaRequest {
	check_collateral_state_fingerprint: boolean;
	collateral_state_fingerprint: string;
	credit_address: string;
	available_credit_limit: CreateSimpleLoanFungibleProposalRequestSchemaRequestAvailableCreditLimit;
	allowed_acceptor: string;
	proposer: string;
	is_offer: boolean;
	refinancing_loan_id: CreateSimpleLoanFungibleProposalRequestSchemaRequestRefinancingLoanId;
	nonce_space: CreateSimpleLoanFungibleProposalRequestSchemaRequestNonceSpace;
	nonce: CreateSimpleLoanFungibleProposalRequestSchemaRequestNonce;
	loan_contract: string;
	proposer_spec_hash: string;
	collateral_category: AssetCategory;
	collateral_address: string;
	collateral_id: CreateSimpleLoanFungibleProposalRequestSchemaRequestCollateralId;
	min_collateral_amount: CreateSimpleLoanFungibleProposalRequestSchemaRequestMinCollateralAmount;
	credit_per_collateral_unit: CreateSimpleLoanFungibleProposalRequestSchemaRequestCreditPerCollateralUnit;
	fixed_interest_amount: CreateSimpleLoanFungibleProposalRequestSchemaRequestFixedInterestAmount;
	accruing_interest_apr: number;
	duration: number;
	expiration: number;
	utilized_credit_id?: CreateSimpleLoanFungibleProposalRequestSchemaRequestUtilizedCreditId;
	chain_id: ChainIdEnum;
	proposal_contract_address: string;
	multiproposal_merkle_root: CreateSimpleLoanFungibleProposalRequestSchemaRequestMultiproposalMerkleRoot;
	hash: CreateSimpleLoanFungibleProposalRequestSchemaRequestHash;
	signature: string;
	type: CreateSimpleLoanFungibleProposalRequestSchemaRequestType;
	is_on_chain: boolean;
	source_of_funds?: CreateSimpleLoanFungibleProposalRequestSchemaRequestSourceOfFunds;
	related_thesis_id?: CreateSimpleLoanFungibleProposalRequestSchemaRequestRelatedThesisId;
	referrer?: CreateSimpleLoanFungibleProposalRequestSchemaRequestReferrer;
}
