import type { AssetInListSchemaWorkaround } from "./asset-in-list-schema-workaround";
import type { ChainIdEnum } from "./chain-id-enum";
import type { CreditDataSchemaWorkaround } from "./credit-data-schema-workaround";
import type { ProposalAndLoanListSchemaWorkaroundCreatedFromProposalId } from "./proposal-and-loan-list-schema-workaround-created-from-proposal-id";
/**
 * Generated by orval v7.7.0 üç∫
 * Do not edit manually.
 * OpenAPI spec version: 0.0.0
 */
import type { ProposalAndLoanListSchemaWorkaroundDuration } from "./proposal-and-loan-list-schema-workaround-duration";
import type { ProposalAndLoanListSchemaWorkaroundExpiration } from "./proposal-and-loan-list-schema-workaround-expiration";
import type { ProposalAndLoanListSchemaWorkaroundLoanDefaultDate } from "./proposal-and-loan-list-schema-workaround-loan-default-date";
import type { ProposalAndLoanListSchemaWorkaroundMinCollateralAmount } from "./proposal-and-loan-list-schema-workaround-min-collateral-amount";
import type { ProposalAndLoanListSchemaWorkaroundMinCreditAmount } from "./proposal-and-loan-list-schema-workaround-min-credit-amount";
import type { ProposalAndLoanListSchemaWorkaroundOnChainId } from "./proposal-and-loan-list-schema-workaround-on-chain-id";
import type { ProposalAndLoanListSchemaWorkaroundProposalContractAddress } from "./proposal-and-loan-list-schema-workaround-proposal-contract-address";
import type { ProposalAndLoanListSchemaWorkaroundProposalId } from "./proposal-and-loan-list-schema-workaround-proposal-id";
import type { ProposalAndLoanListSchemaWorkaroundProposalSpecificData } from "./proposal-and-loan-list-schema-workaround-proposal-specific-data";
import type { ProposalAndLoanListSchemaWorkaroundRelatedThesisId } from "./proposal-and-loan-list-schema-workaround-related-thesis-id";
import type { ProposalAndLoanListSchemaWorkaroundSourceOfFunds } from "./proposal-and-loan-list-schema-workaround-source-of-funds";
import type { ProposalAndLoanListSchemaWorkaroundStatus } from "./proposal-and-loan-list-schema-workaround-status";
import type { ProposalAndLoanListSchemaWorkaroundType } from "./proposal-and-loan-list-schema-workaround-type";

export interface ProposalAndLoanListSchemaWorkaround {
	id: string;
	duration: ProposalAndLoanListSchemaWorkaroundDuration;
	loanDefaultDate?: ProposalAndLoanListSchemaWorkaroundLoanDefaultDate;
	expiration?: ProposalAndLoanListSchemaWorkaroundExpiration;
	status: (typeof ProposalAndLoanListSchemaWorkaroundStatus)[keyof typeof ProposalAndLoanListSchemaWorkaroundStatus];
	collateral: AssetInListSchemaWorkaround;
	collateralAmount: string;
	minCollateralAmount?: ProposalAndLoanListSchemaWorkaroundMinCollateralAmount;
	minCreditAmount?: ProposalAndLoanListSchemaWorkaroundMinCreditAmount;
	creditData: CreditDataSchemaWorkaround;
	creditAsset: AssetInListSchemaWorkaround;
	chainId: ChainIdEnum;
	proposalContractAddress?: ProposalAndLoanListSchemaWorkaroundProposalContractAddress;
	proposalId?: ProposalAndLoanListSchemaWorkaroundProposalId;
	loanContract: string;
	proposer: string;
	isOffer: boolean;
	type: (typeof ProposalAndLoanListSchemaWorkaroundType)[keyof typeof ProposalAndLoanListSchemaWorkaroundType];
	onChainId?: ProposalAndLoanListSchemaWorkaroundOnChainId;
	sourceOfFunds?: ProposalAndLoanListSchemaWorkaroundSourceOfFunds;
	relatedThesisId?: ProposalAndLoanListSchemaWorkaroundRelatedThesisId;
	createdFromProposalId?: ProposalAndLoanListSchemaWorkaroundCreatedFromProposalId;
	proposalSpecificData?: ProposalAndLoanListSchemaWorkaroundProposalSpecificData;
}
