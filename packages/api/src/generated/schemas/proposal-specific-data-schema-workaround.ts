/**
 * Generated by orval v7.8.0 üç∫
 * Do not edit manually.
 * OpenAPI spec version: 0.0.0
 */
import type { ProposalSpecificDataSchemaWorkaroundAllowedAcceptor } from "./proposal-specific-data-schema-workaround-allowed-acceptor";
import type { ProposalSpecificDataSchemaWorkaroundCheckCollateralStateFingerprint } from "./proposal-specific-data-schema-workaround-check-collateral-state-fingerprint";
import type { ProposalSpecificDataSchemaWorkaroundCollateralStateFingerprint } from "./proposal-specific-data-schema-workaround-collateral-state-fingerprint";
import type { ProposalSpecificDataSchemaWorkaroundFeedIntermediaryDenominations } from "./proposal-specific-data-schema-workaround-feed-intermediary-denominations";
import type { ProposalSpecificDataSchemaWorkaroundFeedInvertFlags } from "./proposal-specific-data-schema-workaround-feed-invert-flags";
import type { ProposalSpecificDataSchemaWorkaroundHash } from "./proposal-specific-data-schema-workaround-hash";
import type { ProposalSpecificDataSchemaWorkaroundIsOnChain } from "./proposal-specific-data-schema-workaround-is-on-chain";
import type { ProposalSpecificDataSchemaWorkaroundLoanToValue } from "./proposal-specific-data-schema-workaround-loan-to-value";
import type { ProposalSpecificDataSchemaWorkaroundMaxAvailableCreditAmount } from "./proposal-specific-data-schema-workaround-max-available-credit-amount";
import type { ProposalSpecificDataSchemaWorkaroundMultiproposalMerkleRoot } from "./proposal-specific-data-schema-workaround-multiproposal-merkle-root";
import type { ProposalSpecificDataSchemaWorkaroundNonce } from "./proposal-specific-data-schema-workaround-nonce";
import type { ProposalSpecificDataSchemaWorkaroundNonceSpace } from "./proposal-specific-data-schema-workaround-nonce-space";
import type { ProposalSpecificDataSchemaWorkaroundProposerSpecHash } from "./proposal-specific-data-schema-workaround-proposer-spec-hash";
import type { ProposalSpecificDataSchemaWorkaroundRefinancingLoanId } from "./proposal-specific-data-schema-workaround-refinancing-loan-id";
import type { ProposalSpecificDataSchemaWorkaroundSignature } from "./proposal-specific-data-schema-workaround-signature";
import type { ProposalSpecificDataSchemaWorkaroundUtilizedCreditId } from "./proposal-specific-data-schema-workaround-utilized-credit-id";

export interface ProposalSpecificDataSchemaWorkaround {
	allowedAcceptor?: ProposalSpecificDataSchemaWorkaroundAllowedAcceptor;
	checkCollateralStateFingerprint?: ProposalSpecificDataSchemaWorkaroundCheckCollateralStateFingerprint;
	collateralStateFingerprint?: ProposalSpecificDataSchemaWorkaroundCollateralStateFingerprint;
	hash?: ProposalSpecificDataSchemaWorkaroundHash;
	isOnChain?: ProposalSpecificDataSchemaWorkaroundIsOnChain;
	maxAvailableCreditAmount?: ProposalSpecificDataSchemaWorkaroundMaxAvailableCreditAmount;
	multiproposalMerkleRoot?: ProposalSpecificDataSchemaWorkaroundMultiproposalMerkleRoot;
	nonce?: ProposalSpecificDataSchemaWorkaroundNonce;
	nonceSpace?: ProposalSpecificDataSchemaWorkaroundNonceSpace;
	proposerSpecHash?: ProposalSpecificDataSchemaWorkaroundProposerSpecHash;
	refinancingLoanId?: ProposalSpecificDataSchemaWorkaroundRefinancingLoanId;
	signature?: ProposalSpecificDataSchemaWorkaroundSignature;
	utilizedCreditId?: ProposalSpecificDataSchemaWorkaroundUtilizedCreditId;
	feedIntermediaryDenominations?: ProposalSpecificDataSchemaWorkaroundFeedIntermediaryDenominations;
	feedInvertFlags?: ProposalSpecificDataSchemaWorkaroundFeedInvertFlags;
	loanToValue?: ProposalSpecificDataSchemaWorkaroundLoanToValue;
}
