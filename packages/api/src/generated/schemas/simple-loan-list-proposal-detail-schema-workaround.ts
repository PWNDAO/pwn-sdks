import type { AssetDetailSchemaWorkaround } from "./asset-detail-schema-workaround";
import type { ChainIdEnum } from "./chain-id-enum";
import type { CreditDataSchemaWorkaround } from "./credit-data-schema-workaround";
import type { SimpleLoanListProposalDetailSchemaWorkaroundAllowedAcceptor } from "./simple-loan-list-proposal-detail-schema-workaround-allowed-acceptor";
import type { SimpleLoanListProposalDetailSchemaWorkaroundCollateralIdsWhitelistMerkleRoot } from "./simple-loan-list-proposal-detail-schema-workaround-collateral-ids-whitelist-merkle-root";
import type { SimpleLoanListProposalDetailSchemaWorkaroundCollateralStateFingerprint } from "./simple-loan-list-proposal-detail-schema-workaround-collateral-state-fingerprint";
import type { SimpleLoanListProposalDetailSchemaWorkaroundCreatedFromProposalId } from "./simple-loan-list-proposal-detail-schema-workaround-created-from-proposal-id";
/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * OpenAPI spec version: 0.0.0
 */
import type { SimpleLoanListProposalDetailSchemaWorkaroundDuration } from "./simple-loan-list-proposal-detail-schema-workaround-duration";
import type { SimpleLoanListProposalDetailSchemaWorkaroundExpiration } from "./simple-loan-list-proposal-detail-schema-workaround-expiration";
import type { SimpleLoanListProposalDetailSchemaWorkaroundHash } from "./simple-loan-list-proposal-detail-schema-workaround-hash";
import type { SimpleLoanListProposalDetailSchemaWorkaroundLoanDefaultDate } from "./simple-loan-list-proposal-detail-schema-workaround-loan-default-date";
import type { SimpleLoanListProposalDetailSchemaWorkaroundMinCollateralAmount } from "./simple-loan-list-proposal-detail-schema-workaround-min-collateral-amount";
import type { SimpleLoanListProposalDetailSchemaWorkaroundMinCreditAmount } from "./simple-loan-list-proposal-detail-schema-workaround-min-credit-amount";
import type { SimpleLoanListProposalDetailSchemaWorkaroundMultiproposalMerkleRoot } from "./simple-loan-list-proposal-detail-schema-workaround-multiproposal-merkle-root";
import type { SimpleLoanListProposalDetailSchemaWorkaroundNonce } from "./simple-loan-list-proposal-detail-schema-workaround-nonce";
import type { SimpleLoanListProposalDetailSchemaWorkaroundNonceSpace } from "./simple-loan-list-proposal-detail-schema-workaround-nonce-space";
import type { SimpleLoanListProposalDetailSchemaWorkaroundProposalContractAddress } from "./simple-loan-list-proposal-detail-schema-workaround-proposal-contract-address";
import type { SimpleLoanListProposalDetailSchemaWorkaroundProposalId } from "./simple-loan-list-proposal-detail-schema-workaround-proposal-id";
import type { SimpleLoanListProposalDetailSchemaWorkaroundProposalSpecificData } from "./simple-loan-list-proposal-detail-schema-workaround-proposal-specific-data";
import type { SimpleLoanListProposalDetailSchemaWorkaroundProposerSpecHash } from "./simple-loan-list-proposal-detail-schema-workaround-proposer-spec-hash";
import type { SimpleLoanListProposalDetailSchemaWorkaroundReferrer } from "./simple-loan-list-proposal-detail-schema-workaround-referrer";
import type { SimpleLoanListProposalDetailSchemaWorkaroundRefinancingLoanId } from "./simple-loan-list-proposal-detail-schema-workaround-refinancing-loan-id";
import type { SimpleLoanListProposalDetailSchemaWorkaroundRelatedThesisId } from "./simple-loan-list-proposal-detail-schema-workaround-related-thesis-id";
import type { SimpleLoanListProposalDetailSchemaWorkaroundRevokedAt } from "./simple-loan-list-proposal-detail-schema-workaround-revoked-at";
import type { SimpleLoanListProposalDetailSchemaWorkaroundSignature } from "./simple-loan-list-proposal-detail-schema-workaround-signature";
import type { SimpleLoanListProposalDetailSchemaWorkaroundSourceOfFunds } from "./simple-loan-list-proposal-detail-schema-workaround-source-of-funds";
import type { SimpleLoanListProposalDetailSchemaWorkaroundStatus } from "./simple-loan-list-proposal-detail-schema-workaround-status";
import type { SimpleLoanListProposalDetailSchemaWorkaroundType } from "./simple-loan-list-proposal-detail-schema-workaround-type";

export interface SimpleLoanListProposalDetailSchemaWorkaround {
	id: string;
	duration: SimpleLoanListProposalDetailSchemaWorkaroundDuration;
	loanDefaultDate?: SimpleLoanListProposalDetailSchemaWorkaroundLoanDefaultDate;
	expiration?: SimpleLoanListProposalDetailSchemaWorkaroundExpiration;
	status: (typeof SimpleLoanListProposalDetailSchemaWorkaroundStatus)[keyof typeof SimpleLoanListProposalDetailSchemaWorkaroundStatus];
	collateral: AssetDetailSchemaWorkaround;
	collateralAmount: string;
	minCollateralAmount?: SimpleLoanListProposalDetailSchemaWorkaroundMinCollateralAmount;
	minCreditAmount?: SimpleLoanListProposalDetailSchemaWorkaroundMinCreditAmount;
	creditData: CreditDataSchemaWorkaround;
	creditAsset: AssetDetailSchemaWorkaround;
	chainId: ChainIdEnum;
	proposalContractAddress?: SimpleLoanListProposalDetailSchemaWorkaroundProposalContractAddress;
	proposalId?: SimpleLoanListProposalDetailSchemaWorkaroundProposalId;
	loanContract: string;
	proposer: string;
	isOffer: boolean;
	type: SimpleLoanListProposalDetailSchemaWorkaroundType;
	sourceOfFunds?: SimpleLoanListProposalDetailSchemaWorkaroundSourceOfFunds;
	relatedThesisId?: SimpleLoanListProposalDetailSchemaWorkaroundRelatedThesisId;
	createdFromProposalId?: SimpleLoanListProposalDetailSchemaWorkaroundCreatedFromProposalId;
	proposalSpecificData?: SimpleLoanListProposalDetailSchemaWorkaroundProposalSpecificData;
	checkCollateralStateFingerprint: boolean;
	collateralStateFingerprint: SimpleLoanListProposalDetailSchemaWorkaroundCollateralStateFingerprint;
	availableCreditLimit: string;
	allowedAcceptor: SimpleLoanListProposalDetailSchemaWorkaroundAllowedAcceptor;
	refinancingLoanId: SimpleLoanListProposalDetailSchemaWorkaroundRefinancingLoanId;
	nonceSpace: SimpleLoanListProposalDetailSchemaWorkaroundNonceSpace;
	nonce: SimpleLoanListProposalDetailSchemaWorkaroundNonce;
	proposerSpecHash: SimpleLoanListProposalDetailSchemaWorkaroundProposerSpecHash;
	signature: SimpleLoanListProposalDetailSchemaWorkaroundSignature;
	multiproposalMerkleRoot: SimpleLoanListProposalDetailSchemaWorkaroundMultiproposalMerkleRoot;
	isOnChain: boolean;
	hash: SimpleLoanListProposalDetailSchemaWorkaroundHash;
	createdAt: number;
	revokedAt: SimpleLoanListProposalDetailSchemaWorkaroundRevokedAt;
	referrer: SimpleLoanListProposalDetailSchemaWorkaroundReferrer;
	collateralIdsWhitelistMerkleRoot: SimpleLoanListProposalDetailSchemaWorkaroundCollateralIdsWhitelistMerkleRoot;
}
