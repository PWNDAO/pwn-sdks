import type { AssetDetailSchemaWorkaround } from "./asset-detail-schema-workaround";
import type { ChainIdEnum } from "./chain-id-enum";
import type { CreditDataSchemaWorkaround } from "./credit-data-schema-workaround";
import type { V13SimpleLoanListProposalDetailSchemaWorkaroundAllowedAcceptor } from "./v13-simple-loan-list-proposal-detail-schema-workaround-allowed-acceptor";
import type { V13SimpleLoanListProposalDetailSchemaWorkaroundCollateralIdsWhitelistMerkleRoot } from "./v13-simple-loan-list-proposal-detail-schema-workaround-collateral-ids-whitelist-merkle-root";
import type { V13SimpleLoanListProposalDetailSchemaWorkaroundCollateralStateFingerprint } from "./v13-simple-loan-list-proposal-detail-schema-workaround-collateral-state-fingerprint";
import type { V13SimpleLoanListProposalDetailSchemaWorkaroundCreatedFromProposalId } from "./v13-simple-loan-list-proposal-detail-schema-workaround-created-from-proposal-id";
/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * OpenAPI spec version: 0.0.0
 */
import type { V13SimpleLoanListProposalDetailSchemaWorkaroundDuration } from "./v13-simple-loan-list-proposal-detail-schema-workaround-duration";
import type { V13SimpleLoanListProposalDetailSchemaWorkaroundExpiration } from "./v13-simple-loan-list-proposal-detail-schema-workaround-expiration";
import type { V13SimpleLoanListProposalDetailSchemaWorkaroundHash } from "./v13-simple-loan-list-proposal-detail-schema-workaround-hash";
import type { V13SimpleLoanListProposalDetailSchemaWorkaroundLoanDefaultDate } from "./v13-simple-loan-list-proposal-detail-schema-workaround-loan-default-date";
import type { V13SimpleLoanListProposalDetailSchemaWorkaroundMinCollateralAmount } from "./v13-simple-loan-list-proposal-detail-schema-workaround-min-collateral-amount";
import type { V13SimpleLoanListProposalDetailSchemaWorkaroundMinCreditAmount } from "./v13-simple-loan-list-proposal-detail-schema-workaround-min-credit-amount";
import type { V13SimpleLoanListProposalDetailSchemaWorkaroundMultiproposalMerkleRoot } from "./v13-simple-loan-list-proposal-detail-schema-workaround-multiproposal-merkle-root";
import type { V13SimpleLoanListProposalDetailSchemaWorkaroundNonce } from "./v13-simple-loan-list-proposal-detail-schema-workaround-nonce";
import type { V13SimpleLoanListProposalDetailSchemaWorkaroundNonceSpace } from "./v13-simple-loan-list-proposal-detail-schema-workaround-nonce-space";
import type { V13SimpleLoanListProposalDetailSchemaWorkaroundProposalContractAddress } from "./v13-simple-loan-list-proposal-detail-schema-workaround-proposal-contract-address";
import type { V13SimpleLoanListProposalDetailSchemaWorkaroundProposalId } from "./v13-simple-loan-list-proposal-detail-schema-workaround-proposal-id";
import type { V13SimpleLoanListProposalDetailSchemaWorkaroundProposalSpecificData } from "./v13-simple-loan-list-proposal-detail-schema-workaround-proposal-specific-data";
import type { V13SimpleLoanListProposalDetailSchemaWorkaroundProposerSpecHash } from "./v13-simple-loan-list-proposal-detail-schema-workaround-proposer-spec-hash";
import type { V13SimpleLoanListProposalDetailSchemaWorkaroundReferrer } from "./v13-simple-loan-list-proposal-detail-schema-workaround-referrer";
import type { V13SimpleLoanListProposalDetailSchemaWorkaroundRefinancingLoanId } from "./v13-simple-loan-list-proposal-detail-schema-workaround-refinancing-loan-id";
import type { V13SimpleLoanListProposalDetailSchemaWorkaroundRelatedThesisId } from "./v13-simple-loan-list-proposal-detail-schema-workaround-related-thesis-id";
import type { V13SimpleLoanListProposalDetailSchemaWorkaroundRevokedAt } from "./v13-simple-loan-list-proposal-detail-schema-workaround-revoked-at";
import type { V13SimpleLoanListProposalDetailSchemaWorkaroundSignature } from "./v13-simple-loan-list-proposal-detail-schema-workaround-signature";
import type { V13SimpleLoanListProposalDetailSchemaWorkaroundSourceOfFunds } from "./v13-simple-loan-list-proposal-detail-schema-workaround-source-of-funds";
import type { V13SimpleLoanListProposalDetailSchemaWorkaroundStatus } from "./v13-simple-loan-list-proposal-detail-schema-workaround-status";
import type { V13SimpleLoanListProposalDetailSchemaWorkaroundType } from "./v13-simple-loan-list-proposal-detail-schema-workaround-type";
import type { V13SimpleLoanListProposalDetailSchemaWorkaroundUtilizedCreditId } from "./v13-simple-loan-list-proposal-detail-schema-workaround-utilized-credit-id";

export interface V13SimpleLoanListProposalDetailSchemaWorkaround {
	id: string;
	duration: V13SimpleLoanListProposalDetailSchemaWorkaroundDuration;
	loanDefaultDate?: V13SimpleLoanListProposalDetailSchemaWorkaroundLoanDefaultDate;
	expiration?: V13SimpleLoanListProposalDetailSchemaWorkaroundExpiration;
	status: (typeof V13SimpleLoanListProposalDetailSchemaWorkaroundStatus)[keyof typeof V13SimpleLoanListProposalDetailSchemaWorkaroundStatus];
	collateral: AssetDetailSchemaWorkaround;
	collateralAmount: string;
	minCollateralAmount?: V13SimpleLoanListProposalDetailSchemaWorkaroundMinCollateralAmount;
	minCreditAmount?: V13SimpleLoanListProposalDetailSchemaWorkaroundMinCreditAmount;
	creditData: CreditDataSchemaWorkaround;
	creditAsset: AssetDetailSchemaWorkaround;
	chainId: ChainIdEnum;
	proposalContractAddress?: V13SimpleLoanListProposalDetailSchemaWorkaroundProposalContractAddress;
	proposalId?: V13SimpleLoanListProposalDetailSchemaWorkaroundProposalId;
	loanContract: string;
	proposer: string;
	isOffer: boolean;
	type: V13SimpleLoanListProposalDetailSchemaWorkaroundType;
	sourceOfFunds?: V13SimpleLoanListProposalDetailSchemaWorkaroundSourceOfFunds;
	relatedThesisId?: V13SimpleLoanListProposalDetailSchemaWorkaroundRelatedThesisId;
	createdFromProposalId?: V13SimpleLoanListProposalDetailSchemaWorkaroundCreatedFromProposalId;
	proposalSpecificData?: V13SimpleLoanListProposalDetailSchemaWorkaroundProposalSpecificData;
	checkCollateralStateFingerprint: boolean;
	collateralStateFingerprint: V13SimpleLoanListProposalDetailSchemaWorkaroundCollateralStateFingerprint;
	availableCreditLimit: string;
	allowedAcceptor: V13SimpleLoanListProposalDetailSchemaWorkaroundAllowedAcceptor;
	refinancingLoanId: V13SimpleLoanListProposalDetailSchemaWorkaroundRefinancingLoanId;
	nonceSpace: V13SimpleLoanListProposalDetailSchemaWorkaroundNonceSpace;
	nonce: V13SimpleLoanListProposalDetailSchemaWorkaroundNonce;
	proposerSpecHash: V13SimpleLoanListProposalDetailSchemaWorkaroundProposerSpecHash;
	signature: V13SimpleLoanListProposalDetailSchemaWorkaroundSignature;
	multiproposalMerkleRoot: V13SimpleLoanListProposalDetailSchemaWorkaroundMultiproposalMerkleRoot;
	isOnChain: boolean;
	hash: V13SimpleLoanListProposalDetailSchemaWorkaroundHash;
	createdAt: number;
	revokedAt: V13SimpleLoanListProposalDetailSchemaWorkaroundRevokedAt;
	referrer: V13SimpleLoanListProposalDetailSchemaWorkaroundReferrer;
	collateralIdsWhitelistMerkleRoot: V13SimpleLoanListProposalDetailSchemaWorkaroundCollateralIdsWhitelistMerkleRoot;
	durationOrDate: number;
	utilizedCreditId: V13SimpleLoanListProposalDetailSchemaWorkaroundUtilizedCreditId;
}
