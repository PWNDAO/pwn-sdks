import type { AssetDetailSchemaWorkaround } from "./asset-detail-schema-workaround";
/**
 * Generated by orval v7.7.0 üç∫
 * Do not edit manually.
 * OpenAPI spec version: 0.0.0
 */
import type { ChainIdEnum } from "./chain-id-enum";
import type { CreditDataSchemaWorkaround } from "./credit-data-schema-workaround";
import type { LoanDetailSchemaWorkaroundBorrowerReferrer } from "./loan-detail-schema-workaround-borrower-referrer";
import type { LoanDetailSchemaWorkaroundClaimedAt } from "./loan-detail-schema-workaround-claimed-at";
import type { LoanDetailSchemaWorkaroundCreatedFromProposalId } from "./loan-detail-schema-workaround-created-from-proposal-id";
import type { LoanDetailSchemaWorkaroundLenderReferrer } from "./loan-detail-schema-workaround-lender-referrer";
import type { LoanDetailSchemaWorkaroundLoanOwner } from "./loan-detail-schema-workaround-loan-owner";
import type { LoanDetailSchemaWorkaroundLoanThatWasRefinancedId } from "./loan-detail-schema-workaround-loan-that-was-refinanced-id";
import type { LoanDetailSchemaWorkaroundPaidBackAt } from "./loan-detail-schema-workaround-paid-back-at";
import type { LoanDetailSchemaWorkaroundRelatedThesisId } from "./loan-detail-schema-workaround-related-thesis-id";
import type { LoanDetailSchemaWorkaroundTypeEnum } from "./loan-detail-schema-workaround-type-enum";
import type { LoanStatus } from "./loan-status";

export interface LoanDetailSchemaWorkaround {
	chainId: ChainIdEnum;
	contractAddress: string;
	onChainId: string;
	loanTokenContractAddress: string;
	createdAt: number;
	originalSourceOfFunds: string;
	borrower: string;
	originalLender: string;
	loanOwner: LoanDetailSchemaWorkaroundLoanOwner;
	collateral: AssetDetailSchemaWorkaround;
	collateralAmount: string;
	creditAsset: AssetDetailSchemaWorkaround;
	startDate: number;
	defaultDate: number;
	paidBackAt: LoanDetailSchemaWorkaroundPaidBackAt;
	claimedAt: LoanDetailSchemaWorkaroundClaimedAt;
	loanThatWasRefinancedId: LoanDetailSchemaWorkaroundLoanThatWasRefinancedId;
	createdFromProposalId: LoanDetailSchemaWorkaroundCreatedFromProposalId;
	relatedThesisId: LoanDetailSchemaWorkaroundRelatedThesisId;
	duration: number;
	status: LoanStatus;
	creditData: CreditDataSchemaWorkaround;
	type: LoanDetailSchemaWorkaroundTypeEnum;
	borrowerReferrer: LoanDetailSchemaWorkaroundBorrowerReferrer;
	lenderReferrer: LoanDetailSchemaWorkaroundLenderReferrer;
}
