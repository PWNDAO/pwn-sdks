import type { AssetDetailSchemaWorkaround } from "./asset-detail-schema-workaround";
import type { ChainIdEnum } from "./chain-id-enum";
import type { CreditDataSchemaWorkaround } from "./credit-data-schema-workaround";
import type { SimpleLoanFungibleProposalDetailSchemaWorkaroundAllowedAcceptor } from "./simple-loan-fungible-proposal-detail-schema-workaround-allowed-acceptor";
import type { SimpleLoanFungibleProposalDetailSchemaWorkaroundCollateralStateFingerprint } from "./simple-loan-fungible-proposal-detail-schema-workaround-collateral-state-fingerprint";
import type { SimpleLoanFungibleProposalDetailSchemaWorkaroundCreatedFromProposalId } from "./simple-loan-fungible-proposal-detail-schema-workaround-created-from-proposal-id";
/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * OpenAPI spec version: 0.0.0
 */
import type { SimpleLoanFungibleProposalDetailSchemaWorkaroundDuration } from "./simple-loan-fungible-proposal-detail-schema-workaround-duration";
import type { SimpleLoanFungibleProposalDetailSchemaWorkaroundExpiration } from "./simple-loan-fungible-proposal-detail-schema-workaround-expiration";
import type { SimpleLoanFungibleProposalDetailSchemaWorkaroundHash } from "./simple-loan-fungible-proposal-detail-schema-workaround-hash";
import type { SimpleLoanFungibleProposalDetailSchemaWorkaroundLoanDefaultDate } from "./simple-loan-fungible-proposal-detail-schema-workaround-loan-default-date";
import type { SimpleLoanFungibleProposalDetailSchemaWorkaroundMinCreditAmount } from "./simple-loan-fungible-proposal-detail-schema-workaround-min-credit-amount";
import type { SimpleLoanFungibleProposalDetailSchemaWorkaroundMultiproposalMerkleRoot } from "./simple-loan-fungible-proposal-detail-schema-workaround-multiproposal-merkle-root";
import type { SimpleLoanFungibleProposalDetailSchemaWorkaroundNonce } from "./simple-loan-fungible-proposal-detail-schema-workaround-nonce";
import type { SimpleLoanFungibleProposalDetailSchemaWorkaroundNonceSpace } from "./simple-loan-fungible-proposal-detail-schema-workaround-nonce-space";
import type { SimpleLoanFungibleProposalDetailSchemaWorkaroundProposalContractAddress } from "./simple-loan-fungible-proposal-detail-schema-workaround-proposal-contract-address";
import type { SimpleLoanFungibleProposalDetailSchemaWorkaroundProposalId } from "./simple-loan-fungible-proposal-detail-schema-workaround-proposal-id";
import type { SimpleLoanFungibleProposalDetailSchemaWorkaroundProposalSpecificData } from "./simple-loan-fungible-proposal-detail-schema-workaround-proposal-specific-data";
import type { SimpleLoanFungibleProposalDetailSchemaWorkaroundProposerSpecHash } from "./simple-loan-fungible-proposal-detail-schema-workaround-proposer-spec-hash";
import type { SimpleLoanFungibleProposalDetailSchemaWorkaroundReferrer } from "./simple-loan-fungible-proposal-detail-schema-workaround-referrer";
import type { SimpleLoanFungibleProposalDetailSchemaWorkaroundRefinancingLoanId } from "./simple-loan-fungible-proposal-detail-schema-workaround-refinancing-loan-id";
import type { SimpleLoanFungibleProposalDetailSchemaWorkaroundRelatedThesisId } from "./simple-loan-fungible-proposal-detail-schema-workaround-related-thesis-id";
import type { SimpleLoanFungibleProposalDetailSchemaWorkaroundRevokedAt } from "./simple-loan-fungible-proposal-detail-schema-workaround-revoked-at";
import type { SimpleLoanFungibleProposalDetailSchemaWorkaroundSignature } from "./simple-loan-fungible-proposal-detail-schema-workaround-signature";
import type { SimpleLoanFungibleProposalDetailSchemaWorkaroundSourceOfFunds } from "./simple-loan-fungible-proposal-detail-schema-workaround-source-of-funds";
import type { SimpleLoanFungibleProposalDetailSchemaWorkaroundStatus } from "./simple-loan-fungible-proposal-detail-schema-workaround-status";
import type { SimpleLoanFungibleProposalDetailSchemaWorkaroundType } from "./simple-loan-fungible-proposal-detail-schema-workaround-type";

export interface SimpleLoanFungibleProposalDetailSchemaWorkaround {
	id: string;
	duration: SimpleLoanFungibleProposalDetailSchemaWorkaroundDuration;
	loanDefaultDate?: SimpleLoanFungibleProposalDetailSchemaWorkaroundLoanDefaultDate;
	expiration?: SimpleLoanFungibleProposalDetailSchemaWorkaroundExpiration;
	status: (typeof SimpleLoanFungibleProposalDetailSchemaWorkaroundStatus)[keyof typeof SimpleLoanFungibleProposalDetailSchemaWorkaroundStatus];
	collateral: AssetDetailSchemaWorkaround;
	collateralAmount: string;
	minCollateralAmount: string;
	minCreditAmount?: SimpleLoanFungibleProposalDetailSchemaWorkaroundMinCreditAmount;
	creditData: CreditDataSchemaWorkaround;
	creditAsset: AssetDetailSchemaWorkaround;
	chainId: ChainIdEnum;
	proposalContractAddress?: SimpleLoanFungibleProposalDetailSchemaWorkaroundProposalContractAddress;
	proposalId?: SimpleLoanFungibleProposalDetailSchemaWorkaroundProposalId;
	loanContract: string;
	proposer: string;
	isOffer: boolean;
	type: SimpleLoanFungibleProposalDetailSchemaWorkaroundType;
	sourceOfFunds?: SimpleLoanFungibleProposalDetailSchemaWorkaroundSourceOfFunds;
	relatedThesisId?: SimpleLoanFungibleProposalDetailSchemaWorkaroundRelatedThesisId;
	createdFromProposalId?: SimpleLoanFungibleProposalDetailSchemaWorkaroundCreatedFromProposalId;
	proposalSpecificData?: SimpleLoanFungibleProposalDetailSchemaWorkaroundProposalSpecificData;
	checkCollateralStateFingerprint: boolean;
	collateralStateFingerprint: SimpleLoanFungibleProposalDetailSchemaWorkaroundCollateralStateFingerprint;
	availableCreditLimit: string;
	allowedAcceptor: SimpleLoanFungibleProposalDetailSchemaWorkaroundAllowedAcceptor;
	refinancingLoanId: SimpleLoanFungibleProposalDetailSchemaWorkaroundRefinancingLoanId;
	nonceSpace: SimpleLoanFungibleProposalDetailSchemaWorkaroundNonceSpace;
	nonce: SimpleLoanFungibleProposalDetailSchemaWorkaroundNonce;
	proposerSpecHash: SimpleLoanFungibleProposalDetailSchemaWorkaroundProposerSpecHash;
	signature: SimpleLoanFungibleProposalDetailSchemaWorkaroundSignature;
	multiproposalMerkleRoot: SimpleLoanFungibleProposalDetailSchemaWorkaroundMultiproposalMerkleRoot;
	isOnChain: boolean;
	hash: SimpleLoanFungibleProposalDetailSchemaWorkaroundHash;
	createdAt: number;
	revokedAt: SimpleLoanFungibleProposalDetailSchemaWorkaroundRevokedAt;
	referrer: SimpleLoanFungibleProposalDetailSchemaWorkaroundReferrer;
}
